<?php

class ProductController extends AdminController
{
	protected $menuname = 'product';
	public $module = 'Common';
	protected $pageTitle = 'Material / Service';
	public $wfname = '';
	protected $sqldata = "select a0.productid,a0.productname,a0.productpic,a0.barcode,a0.isstock,a0.panjang,a0.lebar,a0.tinggi,a0.recordstatus,a0.materialtypeid, a1.description
    from product a0 
    left join materialtype a1 on a1.materialtypeid = a0.materialtypeid
  ";
  protected $sqlcount = "select count(1) 
    from product a0 
  ";

	protected function getSQL()
	{
		$this->count=Yii::app()->db->createCommand($this->sqlcount)->queryScalar();
		$where = "";
		if ((isset($_REQUEST['productname'])) && (isset($_REQUEST['productpic'])) && (isset($_REQUEST['barcode'])))
		{				
			$where .= " where a0.productname like '%". $_REQUEST['productname']."%' 
and a0.productpic like '%". $_REQUEST['productpic']."%' 
and a0.panjang like '%". $_REQUEST['panjang']."%' 
and a0.lebar like '%". $_REQUEST['lebar']."%' 
and a0.tinggi like '%". $_REQUEST['tinggi']."%'"; 
		}
		if (isset($_REQUEST['barcode']))
		{
			if (($_REQUEST['barcode'] !== '0') && ($_REQUEST['barcode'] !== ''))
			{
					$where .= " and a0.barcode in (".$_REQUEST['barcode'].")";
			}
		}
		if (isset($_REQUEST['productid']))
		{
			if (($_REQUEST['productid'] !== '0') && ($_REQUEST['productid'] !== ''))
			{
				if ($where == "")
				{
					$where .= " where a0.productid in (".$_REQUEST['productid'].")";
				}
				else
				{
					$where .= " and a0.productid in (".$_REQUEST['productid'].")";
				}
			}
		}
		$this->sqldata = $this->sqldata.$where;
		$this->count=Yii::app()->db->createCommand($this->sqlcount.$where)->queryScalar();
	}
	
	public function actionIndex()
	{
		parent::actionIndex();
		$this->getSQL();
    $dataProvider=new CSqlDataProvider($this->sqldata,array(
			'totalItemCount'=>$this->count,
			'keyField'=>'productid',
			'pagination'=>array(
				'pageSize'=>$this->getParameter('DefaultPageSize'),
				'pageVar'=>'page',
			),
			'sort'=>array(
				'attributes'=>array(
					 'productid','productname','productpic','barcode','isstock','materialtypeid','panjang','lebar','tinggi','recordstatus'
				),
				'defaultOrder' => array( 
					'productid' => CSort::SORT_DESC
				),
			),
		));
		$this->render('index',array('dataProvider'=>$dataProvider));
	}

	public function actionUpload()
	{
		if (!file_exists(Yii::getPathOfAlias('webroot').'/images/product/'))
		{
			mkdir(Yii::getPathOfAlias('webroot').'/images/product/');
		}
		$this->storeFolder = dirname('__FILES__').'/images/product/';
		parent::actionUpload();
		echo $_FILES['upload']['name'];
	}
	
	public function actionCreate()
	{
		parent::actionCreate();echo CJSON::encode(array(
			'status'=>'success',
			
			"productpic"=>"default.jpg"
		));
	}
	
	public function actionUpdate()
	{
		parent::actionUpdate();
		if (isset($_POST['id']))
		{
			$id = $_POST['id'];
			$model = Yii::app()->db->createCommand($this->sqldata.' where a0.productid = '.$id)->queryRow();
			if ($model !== null)
			{
				echo CJSON::encode(array(
					'status'=>'success',
					'productid'=>$model['productid'],
          'productname'=>$model['productname'],
          'productpic'=>$model['productpic'],
          'materialtypeid'=>$model['materialtypeid'],
          'description'=>$model['description'],
          'barcode'=>$model['barcode'],
          'isstock'=>$model['isstock'],
          'panjang'=>$model['panjang'],
          'lebar'=>$model['lebar'],
          'tinggi'=>$model['tinggi'],
          'recordstatus'=>$model['recordstatus'],

				));
				Yii::app()->end();
			}
		}
	}

	public function actionSave()
	{
		parent::actionSave();
		$error = $this->ValidateData(array(
			array('productname','string','emptyproductname'),
      array('productpic','string','emptyproductpic'),
      array('barcode','string','emptybarcode'),
      array('panjang','string','emptypanjang'),
      array('lebar','string','emptylebar'),
      array('tinggi','string','emptytinggi'),
      array('recordstatus','string','emptyrecordstatus'),
    ));
		if ($error == false)
		{
			$id = $_POST['productid'];
			$connection=Yii::app()->db;
			$transaction=$connection->beginTransaction();
			try
			{
				if ($id !== '')
				{
					$sql = 'update product 
			      set productname = :productname,productpic = :productpic,barcode = :barcode,isstock = :isstock,recordstatus = :recordstatus, materialtypeid = :materialtypeid, panjang = :panjang, lebar = :lebar, tinggi = :tinggi
			      where productid = :productid';
				}
				else
				{
					$sql = 'insert into product (productname,productpic,barcode,isstock,recordstatus,materialtypeid,panjang,lebar,tinggi) 
			      values (:productname,:productpic,:barcode,:isstock,:recordstatus,:materialtypeid,:panjang,:lebar,:tinggi)';
				}
				$command = $connection->createCommand($sql);
				if ($id !== '')
				{
					$command->bindvalue(':productid',$_POST['productid'],PDO::PARAM_STR);
				}
				$command->bindvalue(':productname',(($_POST['productname']!=='')?$_POST['productname']:null),PDO::PARAM_STR);
        $command->bindvalue(':productpic',(($_POST['productpic']!=='')?$_POST['productpic']:null),PDO::PARAM_STR);
        $command->bindvalue(':barcode',(($_POST['barcode']!=='')?$_POST['barcode']:null),PDO::PARAM_STR);
        $command->bindvalue(':isstock',(($_POST['isstock']!=='')?$_POST['isstock']:null),PDO::PARAM_STR);
        $command->bindvalue(':materialtypeid',(($_POST['materialtypeid']!=='')?$_POST['materialtypeid']:null),PDO::PARAM_STR);
        $command->bindvalue(':panjang',(($_POST['panjang']!=='')?$_POST['panjang']:null),PDO::PARAM_STR);
        $command->bindvalue(':lebar',(($_POST['lebar']!=='')?$_POST['lebar']:null),PDO::PARAM_STR);
        $command->bindvalue(':tinggi',(($_POST['tinggi']!=='')?$_POST['tinggi']:null),PDO::PARAM_STR);
        $command->bindvalue(':recordstatus',(($_POST['recordstatus']!=='')?$_POST['recordstatus']:null),PDO::PARAM_STR);
				$command->execute();
				$transaction->commit();
				$this->InsertTranslog($command,$id);
				$this->getMessage('success','alreadysaved');
			}
			catch (CDbException $e)
			{
				$transaction->rollBack();
				$this->getMessage('error',$e->getMessage());
			}
		}
	}
		
	public function actionDelete()
	{
		parent::actionDelete();
		$connection=Yii::app()->db;
		$transaction=$connection->beginTransaction();
		try
		{
			if (isset($_POST['id']))
			{
				$id = $_POST['id']; if (!is_array($id)) { $ids[] = $id; $id = $ids; }
				for ($i = 0; $i < count($_POST['id']);$i++)
				{
					$sql = "select recordstatus from product where productid = ".$id[$i];
					$status = Yii::app()->db->createCommand($sql)->queryRow();
					if ($status['recordstatus'] == 1)
					{			
						$sql = "update product set recordstatus = 0 where productid = ".$id[$i];
					}
					else
					if ($status['recordstatus'] == 0)
					{
						$sql = "update product set recordstatus = 1 where productid = ".$id[$i];
					}
					$connection->createCommand($sql)->execute();
				}
				$transaction->commit();
				$this->getMessage('success','alreadysaved');
			}
			else
			{
				$this->getMessage('success','chooseone');
			}
		}
		catch (CDbException $e)
		{
			$transaction->rollback();
			$this->getMessage('error',$e->getMessage());
		}
	}
	
	public function actionPurge()
	{
		parent::actionPurge();
		$connection=Yii::app()->db;
		$transaction=$connection->beginTransaction();
		try
		{
			if (isset($_POST['id']))
			{
				$id = $_POST['id']; if (!is_array($id)) { $ids[] = $id; $id = $ids; }
				for ($i = 0; $i < count($_POST['id']);$i++)
				{
				$sql = "delete from product where productid = ".$id[$i];
				Yii::app()->db->createCommand($sql)->execute();
				}
				$transaction->commit();
				$this->getMessage('success','alreadysaved');
			}
			else
			{
				$this->getMessage('success','chooseone');
			}
		}
		catch (CDbException $e)
		{
			$transaction->rollback();
			$this->getMessage('error',$e->getMessage());
		}
	}
	
	public function actionDownPDF()
	{
		parent::actionDownPDF();
		$this->getSQL();
		$dataReader=Yii::app()->db->createCommand($this->sqldata)->queryAll();

		//masukkan judul
		$this->pdf->title=$this->getCatalog('product');
		$this->pdf->AddPage('P');
		$this->pdf->colalign = array('C','C','C','C','C','C');
		$this->pdf->colheader = array($this->getCatalog('productid'),$this->getCatalog('productname'),$this->getCatalog('productpic'),$this->getCatalog('barcode'),$this->getCatalog('isstock'),$this->getCatalog('recordstatus'));
		$this->pdf->setwidths(array(10,40,40,40,15,15));
		$this->pdf->Rowheader();
		$this->pdf->coldetailalign = array('L','L','L','L','L','L');
		
		foreach($dataReader as $row1)
		{
			//masukkan baris untuk cetak
		  $this->pdf->row(array($row1['productid'],$row1['productname'],$row1['productpic'],$row1['barcode'],$row1['isstock'],$row1['recordstatus']));
		}
		// me-render ke browser
		$this->pdf->Output();
	}
	
	public function actionDownxls()
	{
		$this->menuname='product';
		parent::actionDownxls();
		$sql = "select productid,productname,productpic,
						case when isstock = 1 then 'Yes' else 'No' end as isstock,
						barcode,panjang,lebar,tinggi,b.materialtypecode,
						case when a.recordstatus = 1 then 'Yes' else 'No' end as recordstatus
						from product a
						left join materialtype b on b.materialtypeid=a.materialtypeid ";
		if ($_GET['id'] !== '') 
		{
				$sql = $sql . "where a.productid in (".$_GET['id'].")";
		}
		else
		{
			$sql = $sql . "order by productname asc ";
		}
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();	
		$i=3;
		
		foreach($dataReader as $row1)
		{
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$i,$row1['productid'])
				->setCellValueByColumnAndRow(1,$i,$row1['productname'])							
				->setCellValueByColumnAndRow(2,$i,$row1['productpic'])
				->setCellValueByColumnAndRow(3,$i,$row1['isstock'])
				->setCellValueByColumnAndRow(4,$i,$row1['barcode'])
				->setCellValueByColumnAndRow(5,$i,$row1['materialtypecode'])
				->setCellValueByColumnAndRow(6,$i,$row1['panjang'])
				->setCellValueByColumnAndRow(7,$i,$row1['lebar'])
				->setCellValueByColumnAndRow(8,$i,$row1['tinggi'])
				->setCellValueByColumnAndRow(9,$i,$row1['recordstatus']);
			$i++;
		}
		
		
		$this->getFooterXLS($this->phpExcel);
	}
}